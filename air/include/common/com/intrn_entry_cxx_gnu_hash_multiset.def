/*
 * Copyright (C) 2021 Xcalibyte (Shenzhen) Limited.
 */

/*
  Copyright (C) 2000, 2001 Silicon Graphics, Inc.  All Rights Reserved.

  This program is free software; you can redistribute it and/or modify it
  under the terms of version 2 of the GNU General Public License as
  published by the Free Software Foundation.

  This program is distributed in the hope that it would be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

  Further, this software is distributed without any warranty that it is
  free of the rightful claim of any third person regarding infringement
  or the like.  Any license provided herein, whether implied or
  otherwise, applies only to this software file.  Patent licenses, if
  any, provided herein do not apply to combinations of this program with
  other software, or any other product whatsoever.

  You should have received a copy of the GNU General Public License along
  with this program; if not, write the Free Software Foundation, Inc., 59
  Temple Place - Suite 330, Boston MA 02111-1307, USA.

  Contact information:  Silicon Graphics, Inc., 1600 Amphitheatre Pky,
  Mountain View, CA 94043, or:

  http://www.sgi.com

  For further information regarding this notice, see:

  http://oss.sgi.com/projects/GenInfo/NoticeExplan

*/


/* auto-generated intrinsics for c++ gnu_hash_multiset intrinsic. 2021-10-26 11:57:22 */

/* _ZNK9__gnu_cxx13hash_multiset13get_allocatorEv hash_multiset::get_allocator */
DEF_INTRN_ENTRY(INTRN__ZNK9__gnu_cxx13hash_multiset13get_allocatorEv, "_ZNK9__gnu_cxx13hash_multiset13get_allocatorEv", BYVAL, NOT_PURE, SIDEEFFECTS,
                DOES_RETURN, NOT_ACTUAL, NOT_CGINTRINSIC, NOT_SLAVE,
                IRETURN_I8, "_ZNK9__gnu_cxx13hash_multiset13get_allocatorEv", "hash_multiset::get_allocator", "__gnu_cxx::hash_multiset<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::get_allocator()")
/* _ZNK9__gnu_cxx13hash_multiset5emptyEv hash_multiset::empty */
DEF_INTRN_ENTRY(INTRN__ZNK9__gnu_cxx13hash_multiset5emptyEv, "_ZNK9__gnu_cxx13hash_multiset5emptyEv", BYVAL, NOT_PURE, SIDEEFFECTS,
                DOES_RETURN, NOT_ACTUAL, NOT_CGINTRINSIC, NOT_SLAVE,
                IRETURN_I1, "_ZNK9__gnu_cxx13hash_multiset5emptyEv", "hash_multiset::empty", "__gnu_cxx::hash_multiset<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::empty()")
/* _ZNK9__gnu_cxx13hash_multiset4sizeEv hash_multiset::size */
DEF_INTRN_ENTRY(INTRN__ZNK9__gnu_cxx13hash_multiset4sizeEv, "_ZNK9__gnu_cxx13hash_multiset4sizeEv", BYVAL, NOT_PURE, SIDEEFFECTS,
                DOES_RETURN, NOT_ACTUAL, NOT_CGINTRINSIC, NOT_SLAVE,
                IRETURN_I8, "_ZNK9__gnu_cxx13hash_multiset4sizeEv", "hash_multiset::size", "__gnu_cxx::hash_multiset<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::size()")
/* _ZNK9__gnu_cxx13hash_multiset8max_sizeEv hash_multiset::max_size */
DEF_INTRN_ENTRY(INTRN__ZNK9__gnu_cxx13hash_multiset8max_sizeEv, "_ZNK9__gnu_cxx13hash_multiset8max_sizeEv", BYVAL, NOT_PURE, SIDEEFFECTS,
                DOES_RETURN, NOT_ACTUAL, NOT_CGINTRINSIC, NOT_SLAVE,
                IRETURN_I8, "_ZNK9__gnu_cxx13hash_multiset8max_sizeEv", "hash_multiset::max_size", "__gnu_cxx::hash_multiset<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::max_size()")
/* _ZN9__gnu_cxx13hash_multiset5beginEv hash_multiset::begin */
DEF_INTRN_ENTRY(INTRN__ZN9__gnu_cxx13hash_multiset5beginEv, "_ZN9__gnu_cxx13hash_multiset5beginEv", BYVAL, NOT_PURE, SIDEEFFECTS,
                DOES_RETURN, NOT_ACTUAL, NOT_CGINTRINSIC, NOT_SLAVE,
                IRETURN_I8, "_ZN9__gnu_cxx13hash_multiset5beginEv", "hash_multiset::begin", "__gnu_cxx::hash_multiset<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::begin()")
/* _ZN9__gnu_cxx13hash_multiset3endEv hash_multiset::end */
DEF_INTRN_ENTRY(INTRN__ZN9__gnu_cxx13hash_multiset3endEv, "_ZN9__gnu_cxx13hash_multiset3endEv", BYVAL, NOT_PURE, SIDEEFFECTS,
                DOES_RETURN, NOT_ACTUAL, NOT_CGINTRINSIC, NOT_SLAVE,
                IRETURN_I8, "_ZN9__gnu_cxx13hash_multiset3endEv", "hash_multiset::end", "__gnu_cxx::hash_multiset<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::end()")
/* _ZNK9__gnu_cxx13hash_multiset5beginEv hash_multiset::begin */
DEF_INTRN_ENTRY(INTRN__ZNK9__gnu_cxx13hash_multiset5beginEv, "_ZNK9__gnu_cxx13hash_multiset5beginEv", BYVAL, NOT_PURE, SIDEEFFECTS,
                DOES_RETURN, NOT_ACTUAL, NOT_CGINTRINSIC, NOT_SLAVE,
                IRETURN_I8, "_ZNK9__gnu_cxx13hash_multiset5beginEv", "hash_multiset::begin", "__gnu_cxx::hash_multiset<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::begin()")
/* _ZNK9__gnu_cxx13hash_multiset3endEv hash_multiset::end */
DEF_INTRN_ENTRY(INTRN__ZNK9__gnu_cxx13hash_multiset3endEv, "_ZNK9__gnu_cxx13hash_multiset3endEv", BYVAL, NOT_PURE, SIDEEFFECTS,
                DOES_RETURN, NOT_ACTUAL, NOT_CGINTRINSIC, NOT_SLAVE,
                IRETURN_I8, "_ZNK9__gnu_cxx13hash_multiset3endEv", "hash_multiset::end", "__gnu_cxx::hash_multiset<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::end()")
/* _ZN9__gnu_cxx13hash_multiset6insertERKT_ hash_multiset::insert */
DEF_INTRN_ENTRY(INTRN__ZN9__gnu_cxx13hash_multiset6insertERKT_, "_ZN9__gnu_cxx13hash_multiset6insertERKT_", BYVAL, NOT_PURE, SIDEEFFECTS,
                DOES_RETURN, NOT_ACTUAL, NOT_CGINTRINSIC, NOT_SLAVE,
                IRETURN_I8, "_ZN9__gnu_cxx13hash_multiset6insertERKT_", "hash_multiset::insert", "__gnu_cxx::hash_multiset<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::insert(const __gnu_cxx::hash_multiset::value_type & __x)")
/* _ZN9__gnu_cxx13hash_multiset6insertENSt3__112__hash_tableIT_T0_T1_T2_E14const_iteratorERKS3_ hash_multiset::insert */
DEF_INTRN_ENTRY(INTRN__ZN9__gnu_cxx13hash_multiset6insertENSt3__112__hash_tableIT_T0_T1_T2_E14const_iteratorERKS3_, "_ZN9__gnu_cxx13hash_multiset6insertENSt3__112__hash_tableIT_T0_T1_T2_E14const_iteratorERKS3_", BYVAL, NOT_PURE, SIDEEFFECTS,
                DOES_RETURN, NOT_ACTUAL, NOT_CGINTRINSIC, NOT_SLAVE,
                IRETURN_I8, "_ZN9__gnu_cxx13hash_multiset6insertENSt3__112__hash_tableIT_T0_T1_T2_E14const_iteratorERKS3_", "hash_multiset::insert", "__gnu_cxx::hash_multiset<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::insert(__gnu_cxx::hash_multiset::const_iterator , const __gnu_cxx::hash_multiset::value_type & __x)")
/* _ZN9__gnu_cxx13hash_multiset6insertETL0__S1_ hash_multiset::insert */
DEF_INTRN_ENTRY(INTRN__ZN9__gnu_cxx13hash_multiset6insertETL0__S1_, "_ZN9__gnu_cxx13hash_multiset6insertETL0__S1_", BYVAL, NOT_PURE, SIDEEFFECTS,
                DOES_RETURN, NOT_ACTUAL, NOT_CGINTRINSIC, NOT_SLAVE,
                IRETURN_V, "_ZN9__gnu_cxx13hash_multiset6insertETL0__S1_", "hash_multiset::insert", "__gnu_cxx::hash_multiset<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::insert<typename _InputIterator>(_InputIterator __first, _InputIterator __last)")
/* _ZN9__gnu_cxx13hash_multiset5eraseENSt3__112__hash_tableIT_T0_T1_T2_E14const_iteratorE hash_multiset::erase */
DEF_INTRN_ENTRY(INTRN__ZN9__gnu_cxx13hash_multiset5eraseENSt3__112__hash_tableIT_T0_T1_T2_E14const_iteratorE, "_ZN9__gnu_cxx13hash_multiset5eraseENSt3__112__hash_tableIT_T0_T1_T2_E14const_iteratorE", BYVAL, NOT_PURE, SIDEEFFECTS,
                DOES_RETURN, NOT_ACTUAL, NOT_CGINTRINSIC, NOT_SLAVE,
                IRETURN_V, "_ZN9__gnu_cxx13hash_multiset5eraseENSt3__112__hash_tableIT_T0_T1_T2_E14const_iteratorE", "hash_multiset::erase", "__gnu_cxx::hash_multiset<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::erase(__gnu_cxx::hash_multiset::const_iterator __p)")
/* _ZN9__gnu_cxx13hash_multiset5eraseERKT_ hash_multiset::erase */
DEF_INTRN_ENTRY(INTRN__ZN9__gnu_cxx13hash_multiset5eraseERKT_, "_ZN9__gnu_cxx13hash_multiset5eraseERKT_", BYVAL, NOT_PURE, SIDEEFFECTS,
                DOES_RETURN, NOT_ACTUAL, NOT_CGINTRINSIC, NOT_SLAVE,
                IRETURN_I8, "_ZN9__gnu_cxx13hash_multiset5eraseERKT_", "hash_multiset::erase", "__gnu_cxx::hash_multiset<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::erase(const __gnu_cxx::hash_multiset::key_type & __k)")
/* _ZN9__gnu_cxx13hash_multiset5eraseENSt3__112__hash_tableIT_T0_T1_T2_E14const_iteratorES8_ hash_multiset::erase */
DEF_INTRN_ENTRY(INTRN__ZN9__gnu_cxx13hash_multiset5eraseENSt3__112__hash_tableIT_T0_T1_T2_E14const_iteratorES8_, "_ZN9__gnu_cxx13hash_multiset5eraseENSt3__112__hash_tableIT_T0_T1_T2_E14const_iteratorES8_", BYVAL, NOT_PURE, SIDEEFFECTS,
                DOES_RETURN, NOT_ACTUAL, NOT_CGINTRINSIC, NOT_SLAVE,
                IRETURN_V, "_ZN9__gnu_cxx13hash_multiset5eraseENSt3__112__hash_tableIT_T0_T1_T2_E14const_iteratorES8_", "hash_multiset::erase", "__gnu_cxx::hash_multiset<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::erase(__gnu_cxx::hash_multiset::const_iterator __first, __gnu_cxx::hash_multiset::const_iterator __last)")
/* _ZN9__gnu_cxx13hash_multiset5clearEv hash_multiset::clear */
DEF_INTRN_ENTRY(INTRN__ZN9__gnu_cxx13hash_multiset5clearEv, "_ZN9__gnu_cxx13hash_multiset5clearEv", BYVAL, NOT_PURE, SIDEEFFECTS,
                DOES_RETURN, NOT_ACTUAL, NOT_CGINTRINSIC, NOT_SLAVE,
                IRETURN_V, "_ZN9__gnu_cxx13hash_multiset5clearEv", "hash_multiset::clear", "__gnu_cxx::hash_multiset<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::clear()")
/* _ZN9__gnu_cxx13hash_multiset4swapERNS_13hash_multisetIT_T0_T1_T2_EE hash_multiset::swap */
DEF_INTRN_ENTRY(INTRN__ZN9__gnu_cxx13hash_multiset4swapERNS_13hash_multisetIT_T0_T1_T2_EE, "_ZN9__gnu_cxx13hash_multiset4swapERNS_13hash_multisetIT_T0_T1_T2_EE", BYVAL, NOT_PURE, SIDEEFFECTS,
                DOES_RETURN, NOT_ACTUAL, NOT_CGINTRINSIC, NOT_SLAVE,
                IRETURN_V, "_ZN9__gnu_cxx13hash_multiset4swapERNS_13hash_multisetIT_T0_T1_T2_EE", "hash_multiset::swap", "__gnu_cxx::hash_multiset<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::swap(hash_multiset<_Value, _Hash, _Pred, _Alloc> & __u)")
/* _ZN9__gnu_cxx13hash_multiset4findERKT_ hash_multiset::find */
DEF_INTRN_ENTRY(INTRN__ZN9__gnu_cxx13hash_multiset4findERKT_, "_ZN9__gnu_cxx13hash_multiset4findERKT_", BYVAL, NOT_PURE, SIDEEFFECTS,
                DOES_RETURN, NOT_ACTUAL, NOT_CGINTRINSIC, NOT_SLAVE,
                IRETURN_I8, "_ZN9__gnu_cxx13hash_multiset4findERKT_", "hash_multiset::find", "__gnu_cxx::hash_multiset<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::find(const __gnu_cxx::hash_multiset::key_type & __k)")
/* _ZNK9__gnu_cxx13hash_multiset4findERKT_ hash_multiset::find */
DEF_INTRN_ENTRY(INTRN__ZNK9__gnu_cxx13hash_multiset4findERKT_, "_ZNK9__gnu_cxx13hash_multiset4findERKT_", BYVAL, NOT_PURE, SIDEEFFECTS,
                DOES_RETURN, NOT_ACTUAL, NOT_CGINTRINSIC, NOT_SLAVE,
                IRETURN_I8, "_ZNK9__gnu_cxx13hash_multiset4findERKT_", "hash_multiset::find", "__gnu_cxx::hash_multiset<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::find(const __gnu_cxx::hash_multiset::key_type & __k)")
/* _ZNK9__gnu_cxx13hash_multiset5countERKT_ hash_multiset::count */
DEF_INTRN_ENTRY(INTRN__ZNK9__gnu_cxx13hash_multiset5countERKT_, "_ZNK9__gnu_cxx13hash_multiset5countERKT_", BYVAL, NOT_PURE, SIDEEFFECTS,
                DOES_RETURN, NOT_ACTUAL, NOT_CGINTRINSIC, NOT_SLAVE,
                IRETURN_I8, "_ZNK9__gnu_cxx13hash_multiset5countERKT_", "hash_multiset::count", "__gnu_cxx::hash_multiset<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::count(const __gnu_cxx::hash_multiset::key_type & __k)")
/* _ZN9__gnu_cxx13hash_multiset11equal_rangeERKT_ hash_multiset::equal_range */
DEF_INTRN_ENTRY(INTRN__ZN9__gnu_cxx13hash_multiset11equal_rangeERKT_, "_ZN9__gnu_cxx13hash_multiset11equal_rangeERKT_", BYVAL, NOT_PURE, SIDEEFFECTS,
                DOES_RETURN, NOT_ACTUAL, NOT_CGINTRINSIC, NOT_SLAVE,
                IRETURN_I8, "_ZN9__gnu_cxx13hash_multiset11equal_rangeERKT_", "hash_multiset::equal_range", "__gnu_cxx::hash_multiset<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::equal_range(const __gnu_cxx::hash_multiset::key_type & __k)")
/* _ZNK9__gnu_cxx13hash_multiset11equal_rangeERKT_ hash_multiset::equal_range */
DEF_INTRN_ENTRY(INTRN__ZNK9__gnu_cxx13hash_multiset11equal_rangeERKT_, "_ZNK9__gnu_cxx13hash_multiset11equal_rangeERKT_", BYVAL, NOT_PURE, SIDEEFFECTS,
                DOES_RETURN, NOT_ACTUAL, NOT_CGINTRINSIC, NOT_SLAVE,
                IRETURN_I8, "_ZNK9__gnu_cxx13hash_multiset11equal_rangeERKT_", "hash_multiset::equal_range", "__gnu_cxx::hash_multiset<typename _Value, typename _Hash, typename _Pred, typename _Alloc>::equal_range(const __gnu_cxx::hash_multiset::key_type & __k)")
/* end */
